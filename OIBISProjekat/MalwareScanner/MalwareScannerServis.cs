using Common;
using Manager;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Security.Cryptography.X509Certificates;
using System.Security.Permissions;
using System.ServiceModel;
using System.Text;
using System.Threading;
using System.Threading.Tasks;

namespace MalwareScanner
{
    class MalwareScannerServis : IMalwareScanning
    {
        public string SendAlarmToIDS()
        {
            // Uraditi kasnije...
            Alarm alarm = new Alarm(DateTime.Now, "Proba", CriticalLevel.WARNING);
            return alarm.ToString();
        }

        public void SendAlarmToMS()
        {
            Console.Write("Sending from IDS to MS");
        }

        public void SendMessage(string message, byte[] sign)
        {
            //kada je u pitanju autentifikacija putem WindowsAuth protokola
            //string clienName = Formatter.ParseName(Thread.CurrentPrincipal.Identity.Name);

            //kad je u pitanju autentifikacija putem Sertifikata
            string clientName = Formatter.ParseName(ServiceSecurityContext.Current.PrimaryIdentity.Name);

            string clientNameSign = clientName + "_sign";
            X509Certificate2 certificate = CertManager.GetCertificateFromStorage(StoreName.TrustedPeople,
                StoreLocation.LocalMachine, clientNameSign);

            /// Verify signature using SHA1 hash algorithm
            if (DigitalSignature.Verify(message, HashAlgorithm.SHA1, sign, certificate))
            {
                Console.WriteLine("Sign is valid");
            }
            else
            {
                Console.WriteLine("Sign is invalid");
            }
        }
    }
}
